module.exports = /* eslint-disable */ [{"name":"HelloWorld","description":"A super lame component that says Hello with a custom message.","props":{"message":{"type":{"name":"string"},"required":false,"description":"Message to display","defaultValue":{"value":"'World'","computed":false}}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** A super lame component that says Hello with a custom message. */\nfunction HelloWorld({message}) {\n  return <div>Hello {message}</div>\n}\n\nHelloWorld.propTypes = {\n  /** Message to display */\n  message: PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n  message: 'World'\n};\n\nexport default HelloWorld;\n","examples":[{"name":"ExampleHelloWorld","description":"Custom Message","code":"import React from 'react';\nimport HelloWorld from 'component-library/HelloWorld';\n\n/** Custom Message */\nexport default function ExampleHellowWorld() {\n  return <HelloWorld message=\"People\" />\n}\n"}]},{"name":"Icon","description":"A super lame component that says Hello with a custom message.","props":{"message":{"type":{"name":"string"},"required":false,"description":"Message to display","defaultValue":{"value":"'World'","computed":false}}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** A super lame component that says Hello with a custom message. */\nfunction Icon({message}) {\n  return <div>Hello {message}</div>\n}\n\nIcon.propTypes = {\n  /** Message to display */\n  message: PropTypes.string\n};\n\nIcon.defaultProps = {\n  message: 'World'\n};\n\nexport default Icon;\n","examples":[{"name":"ExampleIcon","description":"Custom Message","code":"import React from 'react';\nimport HelloWorld from 'component-library/HelloWorld';\n\n/** Custom Message */\nexport default function ExampleHellowWorld() {\n  return <HelloWorld message=\"People\" />\n}\n"}]},{"name":"Table","description":"A super lame component that says Hello with a custom message.","code":"//React\nimport React from 'react';\nimport { array, arrayOf, shape, string, number, func } from 'prop-types';\n//Components\nimport TableColumns from '../TableColumns';\nimport TableRows from '../TableRows';\n/** A super lame component that says Hello with a custom message. */\nconst Table = ({ table, }) => {\n    const {\n        rows: { displayed },\n        sort,\n        columns: { visible, hidden },\n    } = table;\n\n    return (\n        <div>\n            <table className=\"react-collapsible\">\n                <TableColumns columns={ visible }\n                         sort={ sort } />\n                <TableRows rows={ displayed }\n                      visibleColumns={ visible }\n                      hiddenColumns={ hidden } />\n            </table>\n        </div>\n    );\n};\n\nTable.PropTypes = {\n    table: shape({\n        rows: shape({\n            displayed: array.isRequierd,\n        }),\n        columns: shape({\n            visible: arrayOf(shape({\n                accessor: string.isRequired,\n                label: string.isRequired,\n            })),\n            hidden: arrayOf(shape({\n                accessor: string.isRequired,\n                label: string.isRequired,\n            })),\n        }),\n        pagination: shape({\n            currentPage: number.isRequierd,\n        }),\n        globalSearchString: string.isRequierd,\n    }),\n    actions: shape({\n        nextPage: func.isRequired,\n        previousPage: func.isRequired,\n        sortColumn: func.isRequired,\n        searchRows: func.isRequired,\n        clearSearch: func.isRequired,\n        expandRow: func.isRequired,\n        resizeTable: func.isRequired,\n    })\n};\n\nexport default Table\n","examples":[{"name":"ExampleTable","description":"Custom Message","code":"import React from 'react';\nimport Table from 'component-library/Table';\n\n/** Custom Message */\nexport default function ExampleTable() {\n  const props = {\n    table: {\n      columns:{\n        visible:[\n          {accessor:'firstName',label:'First Name',priorityLevel:1,position:1,minWidth:150},\n          {accessor:'lastName',label:'Last Name',priorityLevel:2,position:2,minWidth:150},\n          {accessor:'email',label:'Email',priorityLevel:3,position:3,minWidth:250},\n          {accessor:'address',label:'Address',priorityLevel:4,position:4,minWidth:150},\n          {accessor:'bio',label:'Bio',priorityLevel:5,position:9,minWidth:300}\n        ]\n      ,hidden:[]\n    },\n    rows:{\n        displayed:[\n          {firstName:'Arch',lastName:'Lehner',email:'Ricardo_Vandervort@hotmail.com',address:'615 Heath Ports',city:'Leafort',state:'Maryland',country:'Wallis and Futuna',zipCode:'77401-4917',bio:'Placeat quis cum soluta vel sunt.',isOpen:false},\n          {firstName:'Damien',lastName:'Moen',email:'Jacey73@gmail.com',address:'04766 Wintheiser Pines',city:'Emmaton',state:'Mississippi',country:'French Southern Territories',zipCode:'02718',bio:'Omnis reprehenderit consequuntur corrupti id velit architecto.',isOpen:false},\n          {firstName:'Eric',lastName:'Torphy',email:'Cassidy_Stracke@yahoo.com',address:'26671 Marianne Passage',city:'Paucekton',state:'Alabama',country:'Puerto Rico',zipCode:'24365-3522',bio:'Aliquid eos repellendus magnam qui consequuntur dolore pariatur.',isOpen:false},\n          {firstName:'Ollie',lastName:'Green',email:'Darian_Schamberger@hotmail.com',address:'849 Domenick Field',city:'East Ike',state:'North Carolina',country:'Mayotte',zipCode:'56662-9687',bio:'Unde non consectetur distinctio harum voluptate enim ipsam deserunt.',isOpen:false},\n          {firstName:'Jeremie',lastName:'Shields',email:'Lysanne12@gmail.com',address:'65526 Swift Islands',city:'Jazmynebury',state:'Nevada',country:'Swaziland',zipCode:'38870',bio:'Possimus asperiores labore dolores et et sequi.',isOpen:false}\n        ]\n      }\n    }\n  }\n\n\n  return <Table { ...props }/>\n}\n"}]},{"name":"TableCell","description":"A super lame component that says Hello with a custom message.","code":"//React\nimport React from 'react';\nimport { object, string, number } from 'prop-types';\n//Components\nimport Icon from '../Icon';\n// import '../../assets/styles/react-table.css';\n/** A super lame component that says Hello with a custom message. */\nconst TableCell = ({ row, accessor, cellIndex, rowIndex, actions, hiddenColumnsLength }) => {\n\n    return <td className={ accessor }>{ row[accessor] }</td>;\n};\n\nTableCell.PropTypes = {\n    row: object.isRequired,\n    rowIndex: number.isRequired,\n    cellIndex: number.isRequired,\n    hiddenColumnsLength: number.isRequired,\n    accessor: string.isRequired,\n};\n\nexport default TableCell\n","examples":[]},{"name":"TableColumn","description":"A super lame component that says Hello with a custom message.","code":"//React\nimport React from 'react';\nimport { string } from 'prop-types';\n//Components\n/** A super lame component that says Hello with a custom message. */\nconst TableColumn = ({ accessor, label, onClick, sort }) => {\n    // const direction = sort.column === accessor ? sort.direction : 'none';\n    // const icon = sortDirection({ direction });\n\n    return (\n            <th key={ accessor }\n                className={ `column-${accessor}` }>{ label }</th>\n    );\n};\n\nTableColumn.PropTypes = {\n    accessor: string.isRequired,\n    label: string.isRequired,\n};\n\nexport default TableColumn\n","examples":[]},{"name":"TableColumns","description":"A super lame component that says Hello with a custom message.","code":"//React\nimport React from 'react';\nimport { arrayOf, shape, string, } from 'prop-types';\n//Components\nimport TableColumn from '../TableColumn';\n/** A super lame component that says Hello with a custom message. */\nconst TableColumns = ({ columns }) => {\n    const tableColumns = columns.map(({ accessor, label }) => {\n        return <TableColumn key={ accessor }\n                       accessor={ accessor }\n                       label={ label } />;\n    });\n    return (\n        <thead>\n            <tr>\n                { tableColumns }\n            </tr>\n        </thead>\n    );\n};\n\nTableColumns.PropTypes = {\n    columns: arrayOf(shape({\n        accessor: string.isRequired,\n        label: string.isRequired,\n    })),\n};\n\nexport default TableColumns\n","examples":[]},{"name":"TableExpandedRow","description":"A super lame component that says Hello with a custom message.","code":"//React\nimport React from 'react';\nimport { object, arrayOf, shape, string } from 'prop-types';\n//Components\n/** A super lame component that says Hello with a custom message. */\nconst TableExpandedRow = ({ row, columns, colspan }) => {\n    const listOfHiddenAttributes = columns.map(({ accessor, label }) => {\n        return <p className=\"child-cell\" key={ accessor }>\n                  <span className=\"child-label\">{ label }</span>\n                  <span className=\"child-content\" dangerouslySetInnerHTML={{ __html: row[accessor] }} />\n               </p>\n    });\n\n    return (\n        <td colspan={ colspan }>\n            { listOfHiddenAttributes }\n        </td>\n    );\n};\n\nTableExpandedRow.PropTypes = {\n    row: object.isRequired,\n    columns: arrayOf(shape({\n        accessor: string.isRequired,\n        label: string.isRequired,\n    }))\n};\n\nexport default TableExpandedRow\n","examples":[]},{"name":"TableRow","description":"A super lame component that says Hello with a custom message.","code":"//React\nimport React from 'react';\nimport { object, arrayOf, string, shape } from 'prop-types';\n//Components\nimport TableCell from '../TableCell';\nimport TableExpandedRow from '../TableExpandedRow';\n/** A super lame component that says Hello with a custom message. */\nconst TableRow = ({ row, visibleColumns, hiddenColumns, actions, rowIndex }) => {\n    const hiddenColumnsLength = hiddenColumns.length;\n    const cells = visibleColumns.map(({ accessor }, index) => {\n        return <TableCell key={ accessor }\n                     row={ row }\n                     accessor={ accessor }\n                     rowIndex={ rowIndex }\n                     cellIndex={ index }\n                     hiddenColumnsLength={ hiddenColumnsLength }\n                     actions={ actions } />\n    });\n\n    return (\n            <tr key='normalRow'>\n                { cells }\n            </tr>\n    );\n};\n\nTableRow.PropTypes = {\n    row: object.isRequired,\n    columns: arrayOf(shape({\n        accessor: string.isRequired,\n        label: string.isRequired,\n    }))\n};\n\nexport default TableRow\n","examples":[]},{"name":"TableRows","description":"A super lame component that says Hello with a custom message.","code":"//React\nimport React from 'react';\nimport { array, arrayOf, string, shape } from 'prop-types';\n//Components\nimport TableRow from '../TableRow';\n/** A super lame component that says Hello with a custom message. */\nconst TableRows = ({rows, visibleColumns, hiddenColumns, actions }) => {\n    const tableRows = rows.map((row, index) => {\n        return <TableRow key={ index }\n                    row={ row }\n                    visibleColumns={ visibleColumns }\n                    hiddenColumns={ hiddenColumns }\n                    actions={ actions }\n                    rowIndex={ index } />\n    });\n\n    return (\n        <tbody>\n            { tableRows }\n        </tbody>\n    );\n};\n\nTableRows.PropTypes = {\n  rows: array.isRequierd,\n  columns: arrayOf(shape({\n    accessor: string.isRequired,\n    label: string.isRequired,\n  }))\n};\n\nexport default TableRows\n","examples":[]}]